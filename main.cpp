#include <windows.h>
#include <string>
#include <SDL.h>
#include <SDL_image.h>
#include "background.h"
#include "overall.h"
#include <SDL_ttf.h>


int main(int argc, char *argv[])
{
    SDL_Window* window = initSDL(SCREEN_WIDTH, SCREEN_HEIGHT, "Flappy Bird");
    // t·∫°o c·ª≠a s·ªï m√†n h√¨nh game
    SDL_Renderer* ren = createRenderer(window);

    SDL_Texture* bgr = loadTexture("Data/Image/begin_BR.jpg", ren);
    SDL_RenderCopy( ren, bgr, NULL, NULL); //kh√¥ng quan t√¢m v·ªã tr√≠, k√≠ch th∆∞·ªõc ·∫£nh
//
    SDL_RenderPresent( ren );
    //waitUntilKeyPressed();

      SDL_Event e;
    bool running = true;
    while (running) {
        while (SDL_PollEvent(&e)) {
            if (e.type == SDL_QUIT) {
                running = false;
            }
            if (e.type == SDL_KEYDOWN) {
                if (e.key.keysym.sym == SDLK_ESCAPE) { // Nh·∫•n ESC ƒë·ªÉ tho√°t
                    running = false;
                }
//                if (e.key.keysym.sym == SDLK_RETURN) { // Nh·∫•n ENTER ƒë·ªÉ chuy·ªÉn ·∫£nh
//                    currentImage = (currentImage == image1) ? image2 : image1;
//                }
            }
        }
    }
// day la code thu
if (TTF_Init() == -1) {
    SDL_Log("L·ªói kh·ªüi t·∫°o SDL_ttf: %s", TTF_GetError());
    return -1;
}

    // 5Ô∏è‚É£ T·∫£i font ch·ªØ
    TTF_Font* font = TTF_OpenFont("Consolas.ttf", 48); // C·ª° ch·ªØ 48px
    if (!font) {
        SDL_Log("Kh√¥ng th·ªÉ t·∫£i font: %s", TTF_GetError());

        SDL_Quit();
        return -1;
    }

    // 6Ô∏è‚É£ T·∫°o m√†u ch·ªØ v√†ng
    SDL_Color textColor = {255, 255, 0, 255}; // {R, G, B, A} -> {255, 255, 0} l√† m√†u v√†ng

    // 7Ô∏è‚É£ T·∫°o surface t·ª´ ch·ªØ
    SDL_Surface* textSurface = TTF_RenderText_Solid(font, "Hello", textColor);
    if (!textSurface) {
        SDL_Log("Kh√¥ng th·ªÉ t·∫°o surface ch·ªØ: %s", TTF_GetError());
        TTF_CloseFont(font);
        SDL_DestroyRenderer(ren);
        SDL_DestroyWindow(window);
        TTF_Quit();
        SDL_Quit();
        return -1;
    }

    // 8Ô∏è‚É£ T·∫°o texture t·ª´ surface
    SDL_Texture* textTexture = SDL_CreateTextureFromSurface(ren, textSurface);
    SDL_FreeSurface(textSurface); // Gi·∫£i ph√≥ng surface sau khi t·∫°o texture

    // 9Ô∏è‚É£ ƒê·ªãnh v·ªã tr√≠ v·∫Ω ch·ªØ tr√™n m√†n h√¨nh
    SDL_Rect textRect = {200, 200, 200, 100}; // (x, y, width, height)




//        // X√≥a m√†n h√¨nh v·ªõi m√†u ƒëen
//        SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255);
//        SDL_RenderClear(renderer);

        // V·∫Ω ch·ªØ l√™n renderer
        SDL_RenderCopy(ren, textTexture, NULL, &textRect);

        // Hi·ªÉn th·ªã n·ªôi dung ƒë√£ render l√™n m√†n h√¨nh
        SDL_RenderPresent(ren);
    //}

    // üîö Gi·∫£i ph√≥ng t√†i nguy√™n tr∆∞·ªõc khi tho√°t




//// day la ket thuc
//    SDL_DestroyTexture(bgr);
//    SDL_DestroyRenderer(ren);
//    SDL_DestroyWindow(window);
//    SDL_Quit();
}
